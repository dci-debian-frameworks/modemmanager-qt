diff --git a/src/modem.cpp b/src/modem.cpp
index e595d25..5b052ed 100644
--- a/src/modem.cpp
+++ b/src/modem.cpp
@@ -172,27 +172,6 @@ ModemManager::ModemPrivate::ModemPrivate(const QString &path, Modem *q)
     , q_ptr(q)
 {
     if (modemIface.isValid()) {
-#if MM_CHECK_VERSION(1, 2, 0)
-        QList<QDBusObjectPath> bearersList = modemIface.bearers();
-        Q_FOREACH (const QDBusObjectPath & bearer, bearersList) {
-            if (!bearers.contains(bearer.path())) {
-                bearers.insert(bearer.path(), Bearer::Ptr());
-                Q_EMIT q->bearerAdded(bearer.path());
-            }
-        }
-#else
-        QDBusPendingReply<QList<QDBusObjectPath> > reply = modemIface.ListBearers();
-        reply.waitForFinished();
-        if (reply.isValid()) {
-            Q_FOREACH (const QDBusObjectPath & bearer, reply.value()) {
-                if (!bearers.contains(bearer.path())) {
-                    bearers.insert(bearer.path(), Bearer::Ptr());
-                    Q_EMIT q->bearerAdded(bearer.path());
-                }
-            }
-        }
-#endif
-
         simPath = modemIface.sim().path();
         Q_FOREACH (uint cap, modemIface.supportedCapabilities()) {
             supportedCapabilities.append((MMModemCapability)cap);
@@ -227,9 +206,37 @@ ModemManager::ModemPrivate::ModemPrivate(const QString &path, Modem *q)
             currentBands.append((MMModemBand)band);
         }
         supportedIpFamilies = (ModemManager::Modem::IpBearerFamilies)modemIface.supportedIpFamilies();
+
+        QTimer::singleShot(0, this, &ModemManager::ModemPrivate::initializeBearers);
     }
 }
 
+void ModemManager::ModemPrivate::initializeBearers()
+{
+    Q_Q(Modem);
+
+#if MM_CHECK_VERSION(1, 2, 0)
+        QList<QDBusObjectPath> bearersList = modemIface.bearers();
+        Q_FOREACH (const QDBusObjectPath & bearer, bearersList) {
+            if (!bearers.contains(bearer.path())) {
+                bearers.insert(bearer.path(), Bearer::Ptr());
+                Q_EMIT q->bearerAdded(bearer.path());
+            }
+        }
+#else
+        QDBusPendingReply<QList<QDBusObjectPath> > reply = modemIface.ListBearers();
+        reply.waitForFinished();
+        if (reply.isValid()) {
+            Q_FOREACH (const QDBusObjectPath & bearer, reply.value()) {
+                if (!bearers.contains(bearer.path())) {
+                    bearers.insert(bearer.path(), Bearer::Ptr());
+                    Q_EMIT q->bearerAdded(bearer.path());
+                }
+            }
+        }
+#endif
+}
+
 ModemManager::Modem::Modem(const QString &path, QObject *parent)
     : Interface(*new ModemPrivate(path, this), parent)
 {
diff --git a/src/modem_p.h b/src/modem_p.h
index 36b786b..2e6b8c1 100644
--- a/src/modem_p.h
+++ b/src/modem_p.h
@@ -74,6 +74,7 @@ public:
     Q_DECLARE_PUBLIC(Modem)
     Modem *q_ptr;
 private Q_SLOTS:
+    void initializeBearers();
     virtual void onPropertiesChanged(const QString &interface, const QVariantMap &properties, const QStringList &invalidatedProps) Q_DECL_OVERRIDE;
     void onStateChanged(int oldState, int newState, uint reason);
 };